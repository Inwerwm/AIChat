<Page
    x:Class="AIChat.Views.ChatGptPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:AIChat.Models"
    xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
        <converters:BoolToObjectConverter x:Key="NotBoolToVisibility" TrueValue="Collapsed" FalseValue="Visible"/>
    </Page.Resources>
    <Grid x:Name="ContentArea" ColumnSpacing="10" Margin="0,0,0,20">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MaxWidth="500"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>

        <ListView ItemsSource="{x:Bind ViewModel.ChatGptContexts}" SelectedItem="{x:Bind ViewModel.CurrentContext, Mode=TwoWay}" Grid.Row="0" Grid.Column="0" >
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="model:ChatContext">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Bind Name, Mode=OneWay}" VerticalAlignment="Center" Grid.Column="0" Visibility="{x:Bind EnableRenameMode, Mode=OneWay, Converter={StaticResource NotBoolToVisibility}}"/>
                        <TextBox Text="{x:Bind Name, Mode=TwoWay}" LostFocus="{x:Bind TextBox_LostFocus}" Grid.Column="0" Visibility="{x:Bind EnableRenameMode, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"  />
                        <Button Command="{x:Bind ToggleRenameModeCommand}" Grid.Column="1">
                            <Button.Content>
                                <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xe8ac;"/>
                            </Button.Content>
                        </Button>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Grid Grid.Row="1" Grid.Column="0" ColumnSpacing="10" Margin="0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Button Command="{x:Bind ViewModel.AddContextCommand}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0">
                <Button.Content>
                    <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xe710;"/>
                </Button.Content>
            </Button>
            <Button Command="{x:Bind ViewModel.RemoveContextCommand}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1">
                <Button.Content>
                    <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xe738;"/>
                </Button.Content>
            </Button>
        </Grid>

        <ListView x:Name="ChatLog" ItemsSource="{x:Bind ViewModel.Messages}" SelectionMode="None" Grid.Row="0" Grid.Column="1">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemTemplate>
                <DataTemplate x:DataType="model:ChatMessage">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <Border BorderThickness="1" CornerRadius="3" BorderBrush="{ThemeResource TextFillColorDisabled}" Margin="0,0,0,20">
                            <StackPanel Height="Auto" Margin="10">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{x:Bind Role}"/>
                                    <TextBlock Text=":  "/>
                                    <TextBlock Text="{x:Bind Tokens, Mode=OneWay}" />
                                </StackPanel>
                                <RichTextBlock TextWrapping="Wrap" TextAlignment="Start" Width="640">
                                    <Paragraph>
                                        <Run Text="{x:Bind Content}" />
                                    </Paragraph>
                                </RichTextBlock>
                            </StackPanel>
                        </Border>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <Grid Grid.Row="2" Grid.Column="1" ColumnSpacing="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="120"/>
            </Grid.ColumnDefinitions>

            <Button x:Uid="Button_Clean" Command="{x:Bind ViewModel.CleanCommand}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0" />
            <TextBox x:Uid="Input_Message" Text="{x:Bind ViewModel.InputText, Mode=TwoWay}" AcceptsReturn="True" TextWrapping="Wrap" Grid.Column="1"/>
            <Button x:Uid="Button_Submit" Command="{x:Bind ViewModel.TellCommand}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="2" />
            <ToggleSwitch x:Uid="Switch_ToggleRole" IsOn="{x:Bind ViewModel.AsSystem, Mode=TwoWay}" HorizontalAlignment="Left" Grid.Column="3" />
        </Grid>
    </Grid>
</Page>
